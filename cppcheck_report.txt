firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:878:0: information: Skipping configuration 'DMA2;HAL_DMA_MODULE_ENABLED' since the value of 'DMA2' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hdma->DmaBaseAddress = DMA2;
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: style: Variable 'hdma->Instance->CCR' is reassigned a value before the old one has been used. [redundantAssignment]
  hdma->Instance->CCR  = 0U;
                       ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:234:23: note: hdma->Instance->CCR is assigned
  hdma->Instance->CCR &= ~DMA_CCR_EN;
                      ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: note: hdma->Instance->CCR is overwritten
  hdma->Instance->CCR  = 0U;
                       ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:11: style: The scope of the variable 'index' can be reduced. [variableScope]
  uint8_t index = 0U;
          ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:11: style: The scope of the variable 'nbiterations' can be reduced. [variableScope]
  uint8_t nbiterations = 0U;
          ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:17: style: Variable 'index' is assigned a value that is never used. [unreadVariable]
  uint8_t index = 0U;
                ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:24: style: Variable 'nbiterations' is assigned a value that is never used. [unreadVariable]
  uint8_t nbiterations = 0U;
                       ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:303:23: style: Variable 'addresstmp' is assigned a value that is never used. [unreadVariable]
  uint32_t addresstmp = 0U;
                      ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:555:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (uint32_t)(~((~FLASH_OB_GetWRP()) | WriteProtectPage));
  ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:671:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (FLASH_OB_GetWRP() | WriteProtectPage);
  ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:12: style: The scope of the variable 'address' can be reduced. [variableScope]
  uint32_t address = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:20: style: Variable 'address' is assigned a value that is never used. [unreadVariable]
  uint32_t address = 0U;
                   ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:542:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:658:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:545:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:661:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:548:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:664:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:558:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:674:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:560:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:676:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:564:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:680:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:570:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:686:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:566:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:682:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:477:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = tmp;
              ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = tmp;
              ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = tmp;
              ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:190:17: style: Variable 'temp' is assigned a value that is never used. [unreadVariable]
  uint32_t temp = 0x00U;
                ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:315:16: style: Variable 'tmp' is assigned a value that is never used. [unreadVariable]
  uint32_t tmp = 0x00U;
               ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: style: Variable 'hi2c->Instance->OAR1' is reassigned a value before the old one has been used. [redundantAssignment]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:442:24: note: hi2c->Instance->OAR1 is assigned
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
                       ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: note: hi2c->Instance->OAR1 is overwritten
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: style: Variable 'hi2c->Instance->OAR2' is reassigned a value before the old one has been used. [redundantAssignment]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:465:24: note: hi2c->Instance->OAR2 is assigned
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
                       ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: note: hi2c->Instance->OAR2 is overwritten
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2890:12: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint32_t tmp;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:11: style: The scope of the variable 'transferdirection' can be reduced. [variableScope]
  uint8_t transferdirection = 0U;
          ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:12: style: The scope of the variable 'slaveaddrcode' can be reduced. [variableScope]
  uint16_t slaveaddrcode = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:12: style: The scope of the variable 'ownadd1code' can be reduced. [variableScope]
  uint16_t ownadd1code = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:12: style: The scope of the variable 'ownadd2code' can be reduced. [variableScope]
  uint16_t ownadd2code = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3266:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3500:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3501:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:29: style: Variable 'transferdirection' is assigned a value that is never used. [unreadVariable]
  uint8_t transferdirection = 0U;
                            ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:26: style: Variable 'slaveaddrcode' is assigned a value that is never used. [unreadVariable]
  uint16_t slaveaddrcode = 0U;
                         ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:24: style: Variable 'ownadd1code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd1code = 0U;
                       ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:24: style: Variable 'ownadd2code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd2code = 0U;
                       ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:12: style: The scope of the variable 'tmpreg' can be reduced. [variableScope]
  uint32_t tmpreg = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:19: style: Variable 'tmpreg' is assigned a value that is never used. [unreadVariable]
  uint32_t tmpreg = 0U;
                  ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:223:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 |= I2C_CR1_WUPEN;
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:262:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 &= ~(I2C_CR1_WUPEN);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:271:23: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
   uint32_t tickstart = 0U;
                      ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:727:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:122:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:123:21: style: Variable 'temp_reg' is assigned a value that is never used. [unreadVariable]
  uint32_t temp_reg = 0U;
                    ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:701:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRITE_REG(CRS->CFGR, value);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:705:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  MODIFY_REG(CRS->CR, CRS_CR_TRIM, (pInit->HSI48CalibrationValue << CRS_CR_TRIM_BITNUMBER));
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:710:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_AUTOTRIMEN | CRS_CR_CEN);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:719:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_SWSYNC);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:733:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->ReloadValue = (uint32_t)(READ_BIT(CRS->CFGR, CRS_CFGR_RELOAD));
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:736:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->HSI48CalibrationValue = (uint32_t)(READ_BIT(CRS->CR, CRS_CR_TRIM) >> CRS_CR_TRIM_BITNUMBER);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:739:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorCapture = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FECAP) >> CRS_ISR_FECAP_BITNUMBER);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:742:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorDirection = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FEDIR));
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:847:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itflags = READ_REG(CRS->ISR);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:848:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itsources = READ_REG(CRS->CR);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:854:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCOKC);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:863:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCWARNC);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:872:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_ESYNCC);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:896:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      WRITE_REG(CRS->ICR, CRS_ICR_ERRC);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:391:0: information: Skipping configuration 'HAL_SPI_MODULE_ENABLED;SPI_I2SCFGR_I2SMOD' since the value of 'SPI_I2SCFGR_I2SMOD' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3864:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: style: Variable 'htim->Instance->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
      htim->Instance->CCER = tmpccer;
                           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5046:28: note: htim->Instance->CCER is assigned
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
                           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: note: htim->Instance->CCER is overwritten
      htim->Instance->CCER = tmpccer;
                           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: style: Variable 'TIMx->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
  TIMx->CCER = tmpccer;
             ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5195:14: note: TIMx->CCER is assigned
  TIMx->CCER &= ~TIM_CCER_CC1E;
             ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: note: TIMx->CCER is overwritten
  TIMx->CCER = tmpccer;
             ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3893:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5001:12: style: The scope of the variable 'tmpccmr1' can be reduced. [variableScope]
  uint32_t tmpccmr1 = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5002:12: style: The scope of the variable 'tmpccer' can be reduced. [variableScope]
  uint32_t tmpccer = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1615:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1742:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:693:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:777:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2113:12: style: The scope of the variable 'brrtemp' can be reduced. [variableScope]
  uint16_t brrtemp                    = 0x0000U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2114:12: style: The scope of the variable 'usartdiv' can be reduced. [variableScope]
  uint16_t usartdiv                   = 0x0000U;
           ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2671:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2737:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2739:13: style: The scope of the variable 'uhdata' can be reduced. [variableScope]
  uint16_t  uhdata;
            ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0;
                     ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:339:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:410:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:495:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:351:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:422:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:507:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:347:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:418:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:503:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: style: Variable 'huart->gState' is reassigned a value before the old one has been used. [redundantAssignment]
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:560:17: note: huart->gState is assigned
  huart->gState = HAL_UART_STATE_BUSY;
                ^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: note: huart->gState is overwritten
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/TRS80_model_II/Src/main.c:489:11: style: Unused variable: buffered_code [unusedVariable]
  uint8_t buffered_code, buffered_value;
          ^
firmware/TRS80_model_II/Src/main.c:489:26: style: Unused variable: buffered_value [unusedVariable]
  uint8_t buffered_code, buffered_value;
                         ^
firmware/TRS80_model_II/Src/system_stm32f0xx.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/TRS80_model_II/Src/system_stm32f0xx.c:273:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSE_VALUE;
^
firmware/TRS80_model_II/Src/system_stm32f0xx.c:285:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSE_VALUE/predivfactor) * pllmull;
^
firmware/TRS80_model_II/Src/system_stm32f0xx.c:270:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/TRS80_model_II/Src/system_stm32f0xx.c:303:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
^
firmware/TRS80_model_II/Src/system_stm32f0xx.c:310:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/TRS80_model_II/scrap.c:28:12: error: There is an unknown macro here somewhere. Configuration is required. If KB_WRITE_TIMEOUT is a macro then please configure it. [unknownMacro]
    return KB_WRITE_TIMEOUT
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:878:0: information: Skipping configuration 'DMA2;HAL_DMA_MODULE_ENABLED' since the value of 'DMA2' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hdma->DmaBaseAddress = DMA2;
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: style: Variable 'hdma->Instance->CCR' is reassigned a value before the old one has been used. [redundantAssignment]
  hdma->Instance->CCR  = 0U;
                       ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:234:23: note: hdma->Instance->CCR is assigned
  hdma->Instance->CCR &= ~DMA_CCR_EN;
                      ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: note: hdma->Instance->CCR is overwritten
  hdma->Instance->CCR  = 0U;
                       ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:11: style: The scope of the variable 'index' can be reduced. [variableScope]
  uint8_t index = 0U;
          ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:11: style: The scope of the variable 'nbiterations' can be reduced. [variableScope]
  uint8_t nbiterations = 0U;
          ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:17: style: Variable 'index' is assigned a value that is never used. [unreadVariable]
  uint8_t index = 0U;
                ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:24: style: Variable 'nbiterations' is assigned a value that is never used. [unreadVariable]
  uint8_t nbiterations = 0U;
                       ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:303:23: style: Variable 'addresstmp' is assigned a value that is never used. [unreadVariable]
  uint32_t addresstmp = 0U;
                      ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:555:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (uint32_t)(~((~FLASH_OB_GetWRP()) | WriteProtectPage));
  ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:671:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (FLASH_OB_GetWRP() | WriteProtectPage);
  ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:12: style: The scope of the variable 'address' can be reduced. [variableScope]
  uint32_t address = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:20: style: Variable 'address' is assigned a value that is never used. [unreadVariable]
  uint32_t address = 0U;
                   ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:542:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:658:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:545:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:661:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:548:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:664:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:558:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:674:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:560:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:676:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:564:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:680:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:570:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:686:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:566:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:682:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:477:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = tmp;
              ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = tmp;
              ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = tmp;
              ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:190:17: style: Variable 'temp' is assigned a value that is never used. [unreadVariable]
  uint32_t temp = 0x00U;
                ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:315:16: style: Variable 'tmp' is assigned a value that is never used. [unreadVariable]
  uint32_t tmp = 0x00U;
               ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: style: Variable 'hi2c->Instance->OAR1' is reassigned a value before the old one has been used. [redundantAssignment]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:442:24: note: hi2c->Instance->OAR1 is assigned
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
                       ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: note: hi2c->Instance->OAR1 is overwritten
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: style: Variable 'hi2c->Instance->OAR2' is reassigned a value before the old one has been used. [redundantAssignment]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:465:24: note: hi2c->Instance->OAR2 is assigned
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
                       ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: note: hi2c->Instance->OAR2 is overwritten
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2890:12: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint32_t tmp;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:11: style: The scope of the variable 'transferdirection' can be reduced. [variableScope]
  uint8_t transferdirection = 0U;
          ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:12: style: The scope of the variable 'slaveaddrcode' can be reduced. [variableScope]
  uint16_t slaveaddrcode = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:12: style: The scope of the variable 'ownadd1code' can be reduced. [variableScope]
  uint16_t ownadd1code = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:12: style: The scope of the variable 'ownadd2code' can be reduced. [variableScope]
  uint16_t ownadd2code = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3266:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3500:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3501:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:29: style: Variable 'transferdirection' is assigned a value that is never used. [unreadVariable]
  uint8_t transferdirection = 0U;
                            ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:26: style: Variable 'slaveaddrcode' is assigned a value that is never used. [unreadVariable]
  uint16_t slaveaddrcode = 0U;
                         ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:24: style: Variable 'ownadd1code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd1code = 0U;
                       ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:24: style: Variable 'ownadd2code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd2code = 0U;
                       ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:12: style: The scope of the variable 'tmpreg' can be reduced. [variableScope]
  uint32_t tmpreg = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:19: style: Variable 'tmpreg' is assigned a value that is never used. [unreadVariable]
  uint32_t tmpreg = 0U;
                  ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:223:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 |= I2C_CR1_WUPEN;
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:262:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 &= ~(I2C_CR1_WUPEN);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:271:23: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
   uint32_t tickstart = 0U;
                      ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:727:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:122:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:123:21: style: Variable 'temp_reg' is assigned a value that is never used. [unreadVariable]
  uint32_t temp_reg = 0U;
                    ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:701:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRITE_REG(CRS->CFGR, value);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:705:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  MODIFY_REG(CRS->CR, CRS_CR_TRIM, (pInit->HSI48CalibrationValue << CRS_CR_TRIM_BITNUMBER));
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:710:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_AUTOTRIMEN | CRS_CR_CEN);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:719:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_SWSYNC);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:733:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->ReloadValue = (uint32_t)(READ_BIT(CRS->CFGR, CRS_CFGR_RELOAD));
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:736:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->HSI48CalibrationValue = (uint32_t)(READ_BIT(CRS->CR, CRS_CR_TRIM) >> CRS_CR_TRIM_BITNUMBER);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:739:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorCapture = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FECAP) >> CRS_ISR_FECAP_BITNUMBER);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:742:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorDirection = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FEDIR));
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:847:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itflags = READ_REG(CRS->ISR);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:848:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itsources = READ_REG(CRS->CR);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:854:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCOKC);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:863:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCWARNC);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:872:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_ESYNCC);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:896:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      WRITE_REG(CRS->ICR, CRS_ICR_ERRC);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:391:0: information: Skipping configuration 'HAL_SPI_MODULE_ENABLED;SPI_I2SCFGR_I2SMOD' since the value of 'SPI_I2SCFGR_I2SMOD' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3864:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: style: Variable 'htim->Instance->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
      htim->Instance->CCER = tmpccer;
                           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5046:28: note: htim->Instance->CCER is assigned
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
                           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: note: htim->Instance->CCER is overwritten
      htim->Instance->CCER = tmpccer;
                           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: style: Variable 'TIMx->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
  TIMx->CCER = tmpccer;
             ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5195:14: note: TIMx->CCER is assigned
  TIMx->CCER &= ~TIM_CCER_CC1E;
             ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: note: TIMx->CCER is overwritten
  TIMx->CCER = tmpccer;
             ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3893:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5001:12: style: The scope of the variable 'tmpccmr1' can be reduced. [variableScope]
  uint32_t tmpccmr1 = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5002:12: style: The scope of the variable 'tmpccer' can be reduced. [variableScope]
  uint32_t tmpccer = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1615:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1742:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:693:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:777:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2113:12: style: The scope of the variable 'brrtemp' can be reduced. [variableScope]
  uint16_t brrtemp                    = 0x0000U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2114:12: style: The scope of the variable 'usartdiv' can be reduced. [variableScope]
  uint16_t usartdiv                   = 0x0000U;
           ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2671:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2737:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2739:13: style: The scope of the variable 'uhdata' can be reduced. [variableScope]
  uint16_t  uhdata;
            ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0;
                     ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:339:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:410:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:495:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:351:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:422:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:507:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:347:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:418:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:503:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: style: Variable 'huart->gState' is reassigned a value before the old one has been used. [redundantAssignment]
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:560:17: note: huart->gState is assigned
  huart->gState = HAL_UART_STATE_BUSY;
                ^
firmware/adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: note: huart->gState is overwritten
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/adb/Src/system_stm32f0xx.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/adb/Src/system_stm32f0xx.c:273:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSE_VALUE;
^
firmware/adb/Src/system_stm32f0xx.c:285:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSE_VALUE/predivfactor) * pllmull;
^
firmware/adb/Src/system_stm32f0xx.c:270:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/adb/Src/system_stm32f0xx.c:303:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
^
firmware/adb/Src/system_stm32f0xx.c:310:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/adb/scrap.c:44:1: error: Unmatched '}'. Configuration: ''. [syntaxError]
}
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:878:0: information: Skipping configuration 'DMA2;HAL_DMA_MODULE_ENABLED' since the value of 'DMA2' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hdma->DmaBaseAddress = DMA2;
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: style: Variable 'hdma->Instance->CCR' is reassigned a value before the old one has been used. [redundantAssignment]
  hdma->Instance->CCR  = 0U;
                       ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:234:23: note: hdma->Instance->CCR is assigned
  hdma->Instance->CCR &= ~DMA_CCR_EN;
                      ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: note: hdma->Instance->CCR is overwritten
  hdma->Instance->CCR  = 0U;
                       ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:11: style: The scope of the variable 'index' can be reduced. [variableScope]
  uint8_t index = 0U;
          ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:11: style: The scope of the variable 'nbiterations' can be reduced. [variableScope]
  uint8_t nbiterations = 0U;
          ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:17: style: Variable 'index' is assigned a value that is never used. [unreadVariable]
  uint8_t index = 0U;
                ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:24: style: Variable 'nbiterations' is assigned a value that is never used. [unreadVariable]
  uint8_t nbiterations = 0U;
                       ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:303:23: style: Variable 'addresstmp' is assigned a value that is never used. [unreadVariable]
  uint32_t addresstmp = 0U;
                      ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:555:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (uint32_t)(~((~FLASH_OB_GetWRP()) | WriteProtectPage));
  ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:671:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (FLASH_OB_GetWRP() | WriteProtectPage);
  ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:12: style: The scope of the variable 'address' can be reduced. [variableScope]
  uint32_t address = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:20: style: Variable 'address' is assigned a value that is never used. [unreadVariable]
  uint32_t address = 0U;
                   ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:542:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:658:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:545:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:661:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:548:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:664:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:558:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:674:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:560:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:676:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:564:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:680:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:570:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:686:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:566:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:682:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:477:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = tmp;
              ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = tmp;
              ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = tmp;
              ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:190:17: style: Variable 'temp' is assigned a value that is never used. [unreadVariable]
  uint32_t temp = 0x00U;
                ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:315:16: style: Variable 'tmp' is assigned a value that is never used. [unreadVariable]
  uint32_t tmp = 0x00U;
               ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: style: Variable 'hi2c->Instance->OAR1' is reassigned a value before the old one has been used. [redundantAssignment]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:442:24: note: hi2c->Instance->OAR1 is assigned
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
                       ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: note: hi2c->Instance->OAR1 is overwritten
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: style: Variable 'hi2c->Instance->OAR2' is reassigned a value before the old one has been used. [redundantAssignment]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:465:24: note: hi2c->Instance->OAR2 is assigned
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
                       ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: note: hi2c->Instance->OAR2 is overwritten
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2890:12: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint32_t tmp;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:11: style: The scope of the variable 'transferdirection' can be reduced. [variableScope]
  uint8_t transferdirection = 0U;
          ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:12: style: The scope of the variable 'slaveaddrcode' can be reduced. [variableScope]
  uint16_t slaveaddrcode = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:12: style: The scope of the variable 'ownadd1code' can be reduced. [variableScope]
  uint16_t ownadd1code = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:12: style: The scope of the variable 'ownadd2code' can be reduced. [variableScope]
  uint16_t ownadd2code = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3266:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3500:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3501:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:29: style: Variable 'transferdirection' is assigned a value that is never used. [unreadVariable]
  uint8_t transferdirection = 0U;
                            ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:26: style: Variable 'slaveaddrcode' is assigned a value that is never used. [unreadVariable]
  uint16_t slaveaddrcode = 0U;
                         ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:24: style: Variable 'ownadd1code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd1code = 0U;
                       ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:24: style: Variable 'ownadd2code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd2code = 0U;
                       ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:12: style: The scope of the variable 'tmpreg' can be reduced. [variableScope]
  uint32_t tmpreg = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:19: style: Variable 'tmpreg' is assigned a value that is never used. [unreadVariable]
  uint32_t tmpreg = 0U;
                  ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:223:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 |= I2C_CR1_WUPEN;
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:262:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 &= ~(I2C_CR1_WUPEN);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:271:23: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
   uint32_t tickstart = 0U;
                      ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:727:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:122:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:123:21: style: Variable 'temp_reg' is assigned a value that is never used. [unreadVariable]
  uint32_t temp_reg = 0U;
                    ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:701:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRITE_REG(CRS->CFGR, value);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:705:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  MODIFY_REG(CRS->CR, CRS_CR_TRIM, (pInit->HSI48CalibrationValue << CRS_CR_TRIM_BITNUMBER));
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:710:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_AUTOTRIMEN | CRS_CR_CEN);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:719:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_SWSYNC);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:733:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->ReloadValue = (uint32_t)(READ_BIT(CRS->CFGR, CRS_CFGR_RELOAD));
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:736:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->HSI48CalibrationValue = (uint32_t)(READ_BIT(CRS->CR, CRS_CR_TRIM) >> CRS_CR_TRIM_BITNUMBER);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:739:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorCapture = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FECAP) >> CRS_ISR_FECAP_BITNUMBER);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:742:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorDirection = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FEDIR));
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:847:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itflags = READ_REG(CRS->ISR);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:848:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itsources = READ_REG(CRS->CR);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:854:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCOKC);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:863:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCWARNC);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:872:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_ESYNCC);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:896:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      WRITE_REG(CRS->ICR, CRS_ICR_ERRC);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3864:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: style: Variable 'htim->Instance->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
      htim->Instance->CCER = tmpccer;
                           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5046:28: note: htim->Instance->CCER is assigned
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
                           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: note: htim->Instance->CCER is overwritten
      htim->Instance->CCER = tmpccer;
                           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: style: Variable 'TIMx->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
  TIMx->CCER = tmpccer;
             ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5195:14: note: TIMx->CCER is assigned
  TIMx->CCER &= ~TIM_CCER_CC1E;
             ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: note: TIMx->CCER is overwritten
  TIMx->CCER = tmpccer;
             ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3893:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5001:12: style: The scope of the variable 'tmpccmr1' can be reduced. [variableScope]
  uint32_t tmpccmr1 = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5002:12: style: The scope of the variable 'tmpccer' can be reduced. [variableScope]
  uint32_t tmpccer = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1615:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1742:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:693:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:777:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2113:12: style: The scope of the variable 'brrtemp' can be reduced. [variableScope]
  uint16_t brrtemp                    = 0x0000U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2114:12: style: The scope of the variable 'usartdiv' can be reduced. [variableScope]
  uint16_t usartdiv                   = 0x0000U;
           ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2671:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2737:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2739:13: style: The scope of the variable 'uhdata' can be reduced. [variableScope]
  uint16_t  uhdata;
            ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0;
                     ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:339:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:410:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:495:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:351:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:422:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:507:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:347:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:418:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:503:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: style: Variable 'huart->gState' is reassigned a value before the old one has been used. [redundantAssignment]
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:560:17: note: huart->gState is assigned
  huart->gState = HAL_UART_STATE_BUSY;
                ^
firmware/adb_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: note: huart->gState is overwritten
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/adb_tester/Src/system_stm32f0xx.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/adb_tester/Src/system_stm32f0xx.c:273:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSE_VALUE;
^
firmware/adb_tester/Src/system_stm32f0xx.c:285:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSE_VALUE/predivfactor) * pllmull;
^
firmware/adb_tester/Src/system_stm32f0xx.c:270:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/adb_tester/Src/system_stm32f0xx.c:303:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
^
firmware/adb_tester/Src/system_stm32f0xx.c:310:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/adb_tester/scrap.c:39:1: error: Unmatched '}'. Configuration: ''. [syntaxError]
}
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:878:0: information: Skipping configuration 'DMA2;HAL_DMA_MODULE_ENABLED' since the value of 'DMA2' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hdma->DmaBaseAddress = DMA2;
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: style: Variable 'hdma->Instance->CCR' is reassigned a value before the old one has been used. [redundantAssignment]
  hdma->Instance->CCR  = 0U;
                       ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:234:23: note: hdma->Instance->CCR is assigned
  hdma->Instance->CCR &= ~DMA_CCR_EN;
                      ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: note: hdma->Instance->CCR is overwritten
  hdma->Instance->CCR  = 0U;
                       ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:11: style: The scope of the variable 'index' can be reduced. [variableScope]
  uint8_t index = 0U;
          ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:11: style: The scope of the variable 'nbiterations' can be reduced. [variableScope]
  uint8_t nbiterations = 0U;
          ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:17: style: Variable 'index' is assigned a value that is never used. [unreadVariable]
  uint8_t index = 0U;
                ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:24: style: Variable 'nbiterations' is assigned a value that is never used. [unreadVariable]
  uint8_t nbiterations = 0U;
                       ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:303:23: style: Variable 'addresstmp' is assigned a value that is never used. [unreadVariable]
  uint32_t addresstmp = 0U;
                      ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:555:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (uint32_t)(~((~FLASH_OB_GetWRP()) | WriteProtectPage));
  ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:671:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (FLASH_OB_GetWRP() | WriteProtectPage);
  ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:12: style: The scope of the variable 'address' can be reduced. [variableScope]
  uint32_t address = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:20: style: Variable 'address' is assigned a value that is never used. [unreadVariable]
  uint32_t address = 0U;
                   ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:542:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:658:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:545:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:661:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:548:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:664:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:558:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:674:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:560:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:676:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:564:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:680:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:570:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:686:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:566:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:682:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:477:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = tmp;
              ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = tmp;
              ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = tmp;
              ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:190:17: style: Variable 'temp' is assigned a value that is never used. [unreadVariable]
  uint32_t temp = 0x00U;
                ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:315:16: style: Variable 'tmp' is assigned a value that is never used. [unreadVariable]
  uint32_t tmp = 0x00U;
               ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: style: Variable 'hi2c->Instance->OAR1' is reassigned a value before the old one has been used. [redundantAssignment]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:442:24: note: hi2c->Instance->OAR1 is assigned
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
                       ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: note: hi2c->Instance->OAR1 is overwritten
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: style: Variable 'hi2c->Instance->OAR2' is reassigned a value before the old one has been used. [redundantAssignment]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:465:24: note: hi2c->Instance->OAR2 is assigned
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
                       ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: note: hi2c->Instance->OAR2 is overwritten
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2890:12: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint32_t tmp;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:11: style: The scope of the variable 'transferdirection' can be reduced. [variableScope]
  uint8_t transferdirection = 0U;
          ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:12: style: The scope of the variable 'slaveaddrcode' can be reduced. [variableScope]
  uint16_t slaveaddrcode = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:12: style: The scope of the variable 'ownadd1code' can be reduced. [variableScope]
  uint16_t ownadd1code = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:12: style: The scope of the variable 'ownadd2code' can be reduced. [variableScope]
  uint16_t ownadd2code = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3266:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3500:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3501:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:29: style: Variable 'transferdirection' is assigned a value that is never used. [unreadVariable]
  uint8_t transferdirection = 0U;
                            ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:26: style: Variable 'slaveaddrcode' is assigned a value that is never used. [unreadVariable]
  uint16_t slaveaddrcode = 0U;
                         ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:24: style: Variable 'ownadd1code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd1code = 0U;
                       ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:24: style: Variable 'ownadd2code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd2code = 0U;
                       ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:12: style: The scope of the variable 'tmpreg' can be reduced. [variableScope]
  uint32_t tmpreg = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:19: style: Variable 'tmpreg' is assigned a value that is never used. [unreadVariable]
  uint32_t tmpreg = 0U;
                  ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:223:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 |= I2C_CR1_WUPEN;
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:262:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 &= ~(I2C_CR1_WUPEN);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:271:23: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
   uint32_t tickstart = 0U;
                      ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:727:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:122:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:123:21: style: Variable 'temp_reg' is assigned a value that is never used. [unreadVariable]
  uint32_t temp_reg = 0U;
                    ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:701:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRITE_REG(CRS->CFGR, value);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:705:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  MODIFY_REG(CRS->CR, CRS_CR_TRIM, (pInit->HSI48CalibrationValue << CRS_CR_TRIM_BITNUMBER));
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:710:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_AUTOTRIMEN | CRS_CR_CEN);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:719:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_SWSYNC);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:733:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->ReloadValue = (uint32_t)(READ_BIT(CRS->CFGR, CRS_CFGR_RELOAD));
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:736:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->HSI48CalibrationValue = (uint32_t)(READ_BIT(CRS->CR, CRS_CR_TRIM) >> CRS_CR_TRIM_BITNUMBER);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:739:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorCapture = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FECAP) >> CRS_ISR_FECAP_BITNUMBER);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:742:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorDirection = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FEDIR));
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:847:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itflags = READ_REG(CRS->ISR);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:848:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itsources = READ_REG(CRS->CR);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:854:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCOKC);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:863:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCWARNC);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:872:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_ESYNCC);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:896:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      WRITE_REG(CRS->ICR, CRS_ICR_ERRC);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:391:0: information: Skipping configuration 'HAL_SPI_MODULE_ENABLED;SPI_I2SCFGR_I2SMOD' since the value of 'SPI_I2SCFGR_I2SMOD' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3864:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: style: Variable 'htim->Instance->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
      htim->Instance->CCER = tmpccer;
                           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5046:28: note: htim->Instance->CCER is assigned
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
                           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: note: htim->Instance->CCER is overwritten
      htim->Instance->CCER = tmpccer;
                           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: style: Variable 'TIMx->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
  TIMx->CCER = tmpccer;
             ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5195:14: note: TIMx->CCER is assigned
  TIMx->CCER &= ~TIM_CCER_CC1E;
             ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: note: TIMx->CCER is overwritten
  TIMx->CCER = tmpccer;
             ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3893:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5001:12: style: The scope of the variable 'tmpccmr1' can be reduced. [variableScope]
  uint32_t tmpccmr1 = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5002:12: style: The scope of the variable 'tmpccer' can be reduced. [variableScope]
  uint32_t tmpccer = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1615:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1742:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:693:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:777:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2113:12: style: The scope of the variable 'brrtemp' can be reduced. [variableScope]
  uint16_t brrtemp                    = 0x0000U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2114:12: style: The scope of the variable 'usartdiv' can be reduced. [variableScope]
  uint16_t usartdiv                   = 0x0000U;
           ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2671:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2737:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2739:13: style: The scope of the variable 'uhdata' can be reduced. [variableScope]
  uint16_t  uhdata;
            ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0;
                     ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:339:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:410:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:495:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:351:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:422:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:507:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:347:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:418:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:503:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: style: Variable 'huart->gState' is reassigned a value before the old one has been used. [redundantAssignment]
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:560:17: note: huart->gState is assigned
  huart->gState = HAL_UART_STATE_BUSY;
                ^
firmware/apple_lisa_mac_adb/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: note: huart->gState is overwritten
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/apple_lisa_mac_adb/Src/main.c:431:11: style: Local variable 'buffered_code' shadows outer variable [shadowVariable]
  uint8_t buffered_code, buffered_value, adb_code;
          ^
firmware/apple_lisa_mac_adb/Src/main.c:299:9: note: Shadowed declaration
uint8_t buffered_code, buffered_value;
        ^
firmware/apple_lisa_mac_adb/Src/main.c:431:11: note: Shadow variable
  uint8_t buffered_code, buffered_value, adb_code;
          ^
firmware/apple_lisa_mac_adb/Src/main.c:431:26: style: Local variable 'buffered_value' shadows outer variable [shadowVariable]
  uint8_t buffered_code, buffered_value, adb_code;
                         ^
firmware/apple_lisa_mac_adb/Src/main.c:299:24: note: Shadowed declaration
uint8_t buffered_code, buffered_value;
                       ^
firmware/apple_lisa_mac_adb/Src/main.c:431:26: note: Shadow variable
  uint8_t buffered_code, buffered_value, adb_code;
                         ^
firmware/apple_lisa_mac_adb/Src/quad_encoder.c:147:11: style: The scope of the variable 'cme_count' can be reduced. [variableScope]
  uint8_t cme_count;
          ^
firmware/apple_lisa_mac_adb/Src/system_stm32f0xx.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/apple_lisa_mac_adb/Src/system_stm32f0xx.c:273:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSE_VALUE;
^
firmware/apple_lisa_mac_adb/Src/system_stm32f0xx.c:285:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSE_VALUE/predivfactor) * pllmull;
^
firmware/apple_lisa_mac_adb/Src/system_stm32f0xx.c:270:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/apple_lisa_mac_adb/Src/system_stm32f0xx.c:303:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
^
firmware/apple_lisa_mac_adb/Src/system_stm32f0xx.c:310:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:362:12: style: The scope of the variable 'tmpCFGR1' can be reduced. [variableScope]
  uint32_t tmpCFGR1 = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:1748:12: style: The scope of the variable 'tmpAWDHighThresholdShifted' can be reduced. [variableScope]
  uint32_t tmpAWDHighThresholdShifted;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:1749:12: style: The scope of the variable 'tmpAWDLowThresholdShifted' can be reduced. [variableScope]
  uint32_t tmpAWDLowThresholdShifted;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:1912:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:1977:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:2034:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:1912:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:1977:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:2034:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc_ex.c:116:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc_ex.c:117:12: style: The scope of the variable 'backup_setting_adc_dma_transfer' can be reduced. [variableScope]
  uint32_t backup_setting_adc_dma_transfer = 0; /* Note: Variable not declared as volatile because register read is already declared as volatile */
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc_ex.c:116:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc_ex.c:117:44: style: Variable 'backup_setting_adc_dma_transfer' is assigned a value that is never used. [unreadVariable]
  uint32_t backup_setting_adc_dma_transfer = 0; /* Note: Variable not declared as volatile because register read is already declared as volatile */
                                           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c:288:15: style: Variable 'hdac->State' is reassigned a value before the old one has been used. [redundantAssignment]
  hdac->State = HAL_DAC_STATE_READY;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c:282:15: note: hdac->State is assigned
  hdac->State = HAL_DAC_STATE_BUSY;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c:288:15: note: hdac->State is overwritten
  hdac->State = HAL_DAC_STATE_READY;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac_ex.c:210:15: style: Variable 'hdac->State' is reassigned a value before the old one has been used. [redundantAssignment]
  hdac->State = HAL_DAC_STATE_READY;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac_ex.c:194:15: note: hdac->State is assigned
  hdac->State = HAL_DAC_STATE_BUSY;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac_ex.c:210:15: note: hdac->State is overwritten
  hdac->State = HAL_DAC_STATE_READY;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac_ex.c:156:15: style: Variable 'hdac->State' is reassigned a value before the old one has been used. [redundantAssignment]
  hdac->State = HAL_DAC_STATE_READY;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac_ex.c:140:15: note: hdac->State is assigned
  hdac->State = HAL_DAC_STATE_BUSY;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac_ex.c:156:15: note: hdac->State is overwritten
  hdac->State = HAL_DAC_STATE_READY;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:878:0: information: Skipping configuration 'DMA2;HAL_DMA_MODULE_ENABLED' since the value of 'DMA2' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hdma->DmaBaseAddress = DMA2;
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: style: Variable 'hdma->Instance->CCR' is reassigned a value before the old one has been used. [redundantAssignment]
  hdma->Instance->CCR  = 0U;
                       ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:234:23: note: hdma->Instance->CCR is assigned
  hdma->Instance->CCR &= ~DMA_CCR_EN;
                      ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: note: hdma->Instance->CCR is overwritten
  hdma->Instance->CCR  = 0U;
                       ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:11: style: The scope of the variable 'index' can be reduced. [variableScope]
  uint8_t index = 0U;
          ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:11: style: The scope of the variable 'nbiterations' can be reduced. [variableScope]
  uint8_t nbiterations = 0U;
          ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:17: style: Variable 'index' is assigned a value that is never used. [unreadVariable]
  uint8_t index = 0U;
                ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:24: style: Variable 'nbiterations' is assigned a value that is never used. [unreadVariable]
  uint8_t nbiterations = 0U;
                       ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:303:23: style: Variable 'addresstmp' is assigned a value that is never used. [unreadVariable]
  uint32_t addresstmp = 0U;
                      ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:555:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (uint32_t)(~((~FLASH_OB_GetWRP()) | WriteProtectPage));
  ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:671:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (FLASH_OB_GetWRP() | WriteProtectPage);
  ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:12: style: The scope of the variable 'address' can be reduced. [variableScope]
  uint32_t address = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:20: style: Variable 'address' is assigned a value that is never used. [unreadVariable]
  uint32_t address = 0U;
                   ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:542:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:658:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:545:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:661:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:548:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:664:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:558:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:674:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:560:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:676:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:564:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:680:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:570:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:686:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:566:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:682:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:477:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = tmp;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = tmp;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = tmp;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:190:17: style: Variable 'temp' is assigned a value that is never used. [unreadVariable]
  uint32_t temp = 0x00U;
                ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:315:16: style: Variable 'tmp' is assigned a value that is never used. [unreadVariable]
  uint32_t tmp = 0x00U;
               ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: style: Variable 'hi2c->Instance->OAR1' is reassigned a value before the old one has been used. [redundantAssignment]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:442:24: note: hi2c->Instance->OAR1 is assigned
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
                       ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: note: hi2c->Instance->OAR1 is overwritten
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: style: Variable 'hi2c->Instance->OAR2' is reassigned a value before the old one has been used. [redundantAssignment]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:465:24: note: hi2c->Instance->OAR2 is assigned
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
                       ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: note: hi2c->Instance->OAR2 is overwritten
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2890:12: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint32_t tmp;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:11: style: The scope of the variable 'transferdirection' can be reduced. [variableScope]
  uint8_t transferdirection = 0U;
          ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:12: style: The scope of the variable 'slaveaddrcode' can be reduced. [variableScope]
  uint16_t slaveaddrcode = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:12: style: The scope of the variable 'ownadd1code' can be reduced. [variableScope]
  uint16_t ownadd1code = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:12: style: The scope of the variable 'ownadd2code' can be reduced. [variableScope]
  uint16_t ownadd2code = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3266:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3500:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3501:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:29: style: Variable 'transferdirection' is assigned a value that is never used. [unreadVariable]
  uint8_t transferdirection = 0U;
                            ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:26: style: Variable 'slaveaddrcode' is assigned a value that is never used. [unreadVariable]
  uint16_t slaveaddrcode = 0U;
                         ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:24: style: Variable 'ownadd1code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd1code = 0U;
                       ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:24: style: Variable 'ownadd2code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd2code = 0U;
                       ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:12: style: The scope of the variable 'tmpreg' can be reduced. [variableScope]
  uint32_t tmpreg = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:19: style: Variable 'tmpreg' is assigned a value that is never used. [unreadVariable]
  uint32_t tmpreg = 0U;
                  ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:223:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 |= I2C_CR1_WUPEN;
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:262:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 &= ~(I2C_CR1_WUPEN);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:271:23: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
   uint32_t tickstart = 0U;
                      ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:727:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:122:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:123:21: style: Variable 'temp_reg' is assigned a value that is never used. [unreadVariable]
  uint32_t temp_reg = 0U;
                    ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:701:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRITE_REG(CRS->CFGR, value);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:705:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  MODIFY_REG(CRS->CR, CRS_CR_TRIM, (pInit->HSI48CalibrationValue << CRS_CR_TRIM_BITNUMBER));
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:710:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_AUTOTRIMEN | CRS_CR_CEN);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:719:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_SWSYNC);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:733:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->ReloadValue = (uint32_t)(READ_BIT(CRS->CFGR, CRS_CFGR_RELOAD));
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:736:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->HSI48CalibrationValue = (uint32_t)(READ_BIT(CRS->CR, CRS_CR_TRIM) >> CRS_CR_TRIM_BITNUMBER);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:739:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorCapture = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FECAP) >> CRS_ISR_FECAP_BITNUMBER);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:742:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorDirection = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FEDIR));
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:847:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itflags = READ_REG(CRS->ISR);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:848:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itsources = READ_REG(CRS->CR);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:854:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCOKC);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:863:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCWARNC);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:872:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_ESYNCC);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:896:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      WRITE_REG(CRS->ICR, CRS_ICR_ERRC);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:391:0: information: Skipping configuration 'HAL_SPI_MODULE_ENABLED;SPI_I2SCFGR_I2SMOD' since the value of 'SPI_I2SCFGR_I2SMOD' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3864:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: style: Variable 'htim->Instance->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
      htim->Instance->CCER = tmpccer;
                           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5046:28: note: htim->Instance->CCER is assigned
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
                           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: note: htim->Instance->CCER is overwritten
      htim->Instance->CCER = tmpccer;
                           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: style: Variable 'TIMx->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
  TIMx->CCER = tmpccer;
             ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5195:14: note: TIMx->CCER is assigned
  TIMx->CCER &= ~TIM_CCER_CC1E;
             ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: note: TIMx->CCER is overwritten
  TIMx->CCER = tmpccer;
             ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3893:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5001:12: style: The scope of the variable 'tmpccmr1' can be reduced. [variableScope]
  uint32_t tmpccmr1 = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5002:12: style: The scope of the variable 'tmpccer' can be reduced. [variableScope]
  uint32_t tmpccer = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1615:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1742:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:693:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:777:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2113:12: style: The scope of the variable 'brrtemp' can be reduced. [variableScope]
  uint16_t brrtemp                    = 0x0000U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2114:12: style: The scope of the variable 'usartdiv' can be reduced. [variableScope]
  uint16_t usartdiv                   = 0x0000U;
           ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2671:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2737:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2739:13: style: The scope of the variable 'uhdata' can be reduced. [variableScope]
  uint16_t  uhdata;
            ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0;
                     ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:339:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:410:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:495:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:351:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:422:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:507:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:347:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:418:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:503:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: style: Variable 'huart->gState' is reassigned a value before the old one has been used. [redundantAssignment]
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:560:17: note: huart->gState is assigned
  huart->gState = HAL_UART_STATE_BUSY;
                ^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: note: huart->gState is overwritten
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/bbc_micro/Src/main.c:739:30: style: Condition 'buffered_value==0' is always true [knownConditionTrueFalse]
      else if(buffered_value == 0)
                             ^
firmware/bbc_micro/Src/main.c:723:10: note: Assuming that condition 'buffered_value' is not redundant
      if(buffered_value)
         ^
firmware/bbc_micro/Src/main.c:739:30: note: Condition 'buffered_value==0' is always true
      else if(buffered_value == 0)
                             ^
firmware/bbc_micro/Src/main.c:594:12: style: The scope of the variable 'bbc_ref' can be reduced. [variableScope]
  uint16_t bbc_ref, stm32_intref;
           ^
firmware/bbc_micro/Src/main.c:594:21: style: The scope of the variable 'stm32_intref' can be reduced. [variableScope]
  uint16_t bbc_ref, stm32_intref;
                    ^
firmware/bbc_micro/Src/main.c:602:18: style: Variable 'stm32_intref' is assigned a value that is never used. [unreadVariable]
    stm32_intref = HAL_ADC_GetValue(&hadc);
                 ^
firmware/bbc_micro/Src/system_stm32f0xx.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/bbc_micro/Src/system_stm32f0xx.c:273:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSE_VALUE;
^
firmware/bbc_micro/Src/system_stm32f0xx.c:285:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSE_VALUE/predivfactor) * pllmull;
^
firmware/bbc_micro/Src/system_stm32f0xx.c:270:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/bbc_micro/Src/system_stm32f0xx.c:303:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
^
firmware/bbc_micro/Src/system_stm32f0xx.c:310:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/bbc_micro/scrap.c:229:3: error: Unmatched '}'. Configuration: ''. [syntaxError]
  }
  ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:878:0: information: Skipping configuration 'DMA2;HAL_DMA_MODULE_ENABLED' since the value of 'DMA2' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hdma->DmaBaseAddress = DMA2;
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: style: Variable 'hdma->Instance->CCR' is reassigned a value before the old one has been used. [redundantAssignment]
  hdma->Instance->CCR  = 0U;
                       ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:234:23: note: hdma->Instance->CCR is assigned
  hdma->Instance->CCR &= ~DMA_CCR_EN;
                      ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: note: hdma->Instance->CCR is overwritten
  hdma->Instance->CCR  = 0U;
                       ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:11: style: The scope of the variable 'index' can be reduced. [variableScope]
  uint8_t index = 0U;
          ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:11: style: The scope of the variable 'nbiterations' can be reduced. [variableScope]
  uint8_t nbiterations = 0U;
          ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:17: style: Variable 'index' is assigned a value that is never used. [unreadVariable]
  uint8_t index = 0U;
                ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:24: style: Variable 'nbiterations' is assigned a value that is never used. [unreadVariable]
  uint8_t nbiterations = 0U;
                       ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:303:23: style: Variable 'addresstmp' is assigned a value that is never used. [unreadVariable]
  uint32_t addresstmp = 0U;
                      ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:555:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (uint32_t)(~((~FLASH_OB_GetWRP()) | WriteProtectPage));
  ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:671:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (FLASH_OB_GetWRP() | WriteProtectPage);
  ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:12: style: The scope of the variable 'address' can be reduced. [variableScope]
  uint32_t address = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:20: style: Variable 'address' is assigned a value that is never used. [unreadVariable]
  uint32_t address = 0U;
                   ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:542:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:658:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:545:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:661:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:548:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:664:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:558:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:674:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:560:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:676:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:564:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:680:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:570:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:686:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:566:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:682:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:477:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = tmp;
              ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = tmp;
              ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = tmp;
              ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:190:17: style: Variable 'temp' is assigned a value that is never used. [unreadVariable]
  uint32_t temp = 0x00U;
                ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:315:16: style: Variable 'tmp' is assigned a value that is never used. [unreadVariable]
  uint32_t tmp = 0x00U;
               ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: style: Variable 'hi2c->Instance->OAR1' is reassigned a value before the old one has been used. [redundantAssignment]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:442:24: note: hi2c->Instance->OAR1 is assigned
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
                       ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: note: hi2c->Instance->OAR1 is overwritten
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: style: Variable 'hi2c->Instance->OAR2' is reassigned a value before the old one has been used. [redundantAssignment]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:465:24: note: hi2c->Instance->OAR2 is assigned
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
                       ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: note: hi2c->Instance->OAR2 is overwritten
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2890:12: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint32_t tmp;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:11: style: The scope of the variable 'transferdirection' can be reduced. [variableScope]
  uint8_t transferdirection = 0U;
          ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:12: style: The scope of the variable 'slaveaddrcode' can be reduced. [variableScope]
  uint16_t slaveaddrcode = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:12: style: The scope of the variable 'ownadd1code' can be reduced. [variableScope]
  uint16_t ownadd1code = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:12: style: The scope of the variable 'ownadd2code' can be reduced. [variableScope]
  uint16_t ownadd2code = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3266:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3500:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3501:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:29: style: Variable 'transferdirection' is assigned a value that is never used. [unreadVariable]
  uint8_t transferdirection = 0U;
                            ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:26: style: Variable 'slaveaddrcode' is assigned a value that is never used. [unreadVariable]
  uint16_t slaveaddrcode = 0U;
                         ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:24: style: Variable 'ownadd1code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd1code = 0U;
                       ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:24: style: Variable 'ownadd2code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd2code = 0U;
                       ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:12: style: The scope of the variable 'tmpreg' can be reduced. [variableScope]
  uint32_t tmpreg = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:19: style: Variable 'tmpreg' is assigned a value that is never used. [unreadVariable]
  uint32_t tmpreg = 0U;
                  ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:223:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 |= I2C_CR1_WUPEN;
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:262:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 &= ~(I2C_CR1_WUPEN);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:271:23: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
   uint32_t tickstart = 0U;
                      ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:727:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:122:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:123:21: style: Variable 'temp_reg' is assigned a value that is never used. [unreadVariable]
  uint32_t temp_reg = 0U;
                    ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:701:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRITE_REG(CRS->CFGR, value);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:705:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  MODIFY_REG(CRS->CR, CRS_CR_TRIM, (pInit->HSI48CalibrationValue << CRS_CR_TRIM_BITNUMBER));
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:710:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_AUTOTRIMEN | CRS_CR_CEN);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:719:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_SWSYNC);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:733:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->ReloadValue = (uint32_t)(READ_BIT(CRS->CFGR, CRS_CFGR_RELOAD));
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:736:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->HSI48CalibrationValue = (uint32_t)(READ_BIT(CRS->CR, CRS_CR_TRIM) >> CRS_CR_TRIM_BITNUMBER);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:739:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorCapture = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FECAP) >> CRS_ISR_FECAP_BITNUMBER);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:742:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorDirection = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FEDIR));
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:847:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itflags = READ_REG(CRS->ISR);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:848:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itsources = READ_REG(CRS->CR);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:854:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCOKC);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:863:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCWARNC);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:872:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_ESYNCC);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:896:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      WRITE_REG(CRS->ICR, CRS_ICR_ERRC);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:391:0: information: Skipping configuration 'HAL_SPI_MODULE_ENABLED;SPI_I2SCFGR_I2SMOD' since the value of 'SPI_I2SCFGR_I2SMOD' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3864:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: style: Variable 'htim->Instance->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
      htim->Instance->CCER = tmpccer;
                           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5046:28: note: htim->Instance->CCER is assigned
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
                           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: note: htim->Instance->CCER is overwritten
      htim->Instance->CCER = tmpccer;
                           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: style: Variable 'TIMx->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
  TIMx->CCER = tmpccer;
             ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5195:14: note: TIMx->CCER is assigned
  TIMx->CCER &= ~TIM_CCER_CC1E;
             ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: note: TIMx->CCER is overwritten
  TIMx->CCER = tmpccer;
             ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3893:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5001:12: style: The scope of the variable 'tmpccmr1' can be reduced. [variableScope]
  uint32_t tmpccmr1 = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5002:12: style: The scope of the variable 'tmpccer' can be reduced. [variableScope]
  uint32_t tmpccer = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1615:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1742:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:693:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:777:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2113:12: style: The scope of the variable 'brrtemp' can be reduced. [variableScope]
  uint16_t brrtemp                    = 0x0000U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2114:12: style: The scope of the variable 'usartdiv' can be reduced. [variableScope]
  uint16_t usartdiv                   = 0x0000U;
           ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2671:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2737:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2739:13: style: The scope of the variable 'uhdata' can be reduced. [variableScope]
  uint16_t  uhdata;
            ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0;
                     ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:339:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:410:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:495:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:351:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:422:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:507:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:347:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:418:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:503:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: style: Variable 'huart->gState' is reassigned a value before the old one has been used. [redundantAssignment]
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:560:17: note: huart->gState is assigned
  huart->gState = HAL_UART_STATE_BUSY;
                ^
firmware/ibmpc/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: note: huart->gState is overwritten
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/ibmpc/Src/ps2mouse.c:405:11: style: The scope of the variable 'write_result' can be reduced. [variableScope]
  uint8_t write_result;
          ^
firmware/ibmpc/Src/system_stm32f0xx.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/ibmpc/Src/system_stm32f0xx.c:273:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSE_VALUE;
^
firmware/ibmpc/Src/system_stm32f0xx.c:285:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSE_VALUE/predivfactor) * pllmull;
^
firmware/ibmpc/Src/system_stm32f0xx.c:270:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/ibmpc/Src/system_stm32f0xx.c:303:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
^
firmware/ibmpc/Src/system_stm32f0xx.c:310:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/ibmpc/scrap.c:66:1: error: Unmatched '{'. Configuration: ''. [syntaxError]
{
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:878:0: information: Skipping configuration 'DMA2;HAL_DMA_MODULE_ENABLED' since the value of 'DMA2' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hdma->DmaBaseAddress = DMA2;
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: style: Variable 'hdma->Instance->CCR' is reassigned a value before the old one has been used. [redundantAssignment]
  hdma->Instance->CCR  = 0U;
                       ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:234:23: note: hdma->Instance->CCR is assigned
  hdma->Instance->CCR &= ~DMA_CCR_EN;
                      ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: note: hdma->Instance->CCR is overwritten
  hdma->Instance->CCR  = 0U;
                       ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:11: style: The scope of the variable 'index' can be reduced. [variableScope]
  uint8_t index = 0U;
          ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:11: style: The scope of the variable 'nbiterations' can be reduced. [variableScope]
  uint8_t nbiterations = 0U;
          ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:17: style: Variable 'index' is assigned a value that is never used. [unreadVariable]
  uint8_t index = 0U;
                ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:24: style: Variable 'nbiterations' is assigned a value that is never used. [unreadVariable]
  uint8_t nbiterations = 0U;
                       ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:303:23: style: Variable 'addresstmp' is assigned a value that is never used. [unreadVariable]
  uint32_t addresstmp = 0U;
                      ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:555:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (uint32_t)(~((~FLASH_OB_GetWRP()) | WriteProtectPage));
  ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:671:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (FLASH_OB_GetWRP() | WriteProtectPage);
  ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:12: style: The scope of the variable 'address' can be reduced. [variableScope]
  uint32_t address = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:20: style: Variable 'address' is assigned a value that is never used. [unreadVariable]
  uint32_t address = 0U;
                   ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:542:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:658:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:545:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:661:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:548:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:664:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:558:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:674:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:560:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:676:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:564:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:680:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:570:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:686:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:566:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:682:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:477:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = tmp;
              ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = tmp;
              ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = tmp;
              ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:190:17: style: Variable 'temp' is assigned a value that is never used. [unreadVariable]
  uint32_t temp = 0x00U;
                ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:315:16: style: Variable 'tmp' is assigned a value that is never used. [unreadVariable]
  uint32_t tmp = 0x00U;
               ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: style: Variable 'hi2c->Instance->OAR1' is reassigned a value before the old one has been used. [redundantAssignment]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:442:24: note: hi2c->Instance->OAR1 is assigned
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
                       ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: note: hi2c->Instance->OAR1 is overwritten
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: style: Variable 'hi2c->Instance->OAR2' is reassigned a value before the old one has been used. [redundantAssignment]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:465:24: note: hi2c->Instance->OAR2 is assigned
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
                       ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: note: hi2c->Instance->OAR2 is overwritten
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2890:12: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint32_t tmp;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:11: style: The scope of the variable 'transferdirection' can be reduced. [variableScope]
  uint8_t transferdirection = 0U;
          ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:12: style: The scope of the variable 'slaveaddrcode' can be reduced. [variableScope]
  uint16_t slaveaddrcode = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:12: style: The scope of the variable 'ownadd1code' can be reduced. [variableScope]
  uint16_t ownadd1code = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:12: style: The scope of the variable 'ownadd2code' can be reduced. [variableScope]
  uint16_t ownadd2code = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3266:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3500:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3501:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:29: style: Variable 'transferdirection' is assigned a value that is never used. [unreadVariable]
  uint8_t transferdirection = 0U;
                            ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:26: style: Variable 'slaveaddrcode' is assigned a value that is never used. [unreadVariable]
  uint16_t slaveaddrcode = 0U;
                         ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:24: style: Variable 'ownadd1code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd1code = 0U;
                       ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:24: style: Variable 'ownadd2code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd2code = 0U;
                       ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:12: style: The scope of the variable 'tmpreg' can be reduced. [variableScope]
  uint32_t tmpreg = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:19: style: Variable 'tmpreg' is assigned a value that is never used. [unreadVariable]
  uint32_t tmpreg = 0U;
                  ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:223:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 |= I2C_CR1_WUPEN;
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:262:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 &= ~(I2C_CR1_WUPEN);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:271:23: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
   uint32_t tickstart = 0U;
                      ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:727:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:122:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:123:21: style: Variable 'temp_reg' is assigned a value that is never used. [unreadVariable]
  uint32_t temp_reg = 0U;
                    ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:701:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRITE_REG(CRS->CFGR, value);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:705:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  MODIFY_REG(CRS->CR, CRS_CR_TRIM, (pInit->HSI48CalibrationValue << CRS_CR_TRIM_BITNUMBER));
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:710:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_AUTOTRIMEN | CRS_CR_CEN);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:719:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_SWSYNC);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:733:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->ReloadValue = (uint32_t)(READ_BIT(CRS->CFGR, CRS_CFGR_RELOAD));
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:736:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->HSI48CalibrationValue = (uint32_t)(READ_BIT(CRS->CR, CRS_CR_TRIM) >> CRS_CR_TRIM_BITNUMBER);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:739:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorCapture = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FECAP) >> CRS_ISR_FECAP_BITNUMBER);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:742:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorDirection = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FEDIR));
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:847:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itflags = READ_REG(CRS->ISR);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:848:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itsources = READ_REG(CRS->CR);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:854:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCOKC);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:863:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCWARNC);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:872:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_ESYNCC);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:896:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      WRITE_REG(CRS->ICR, CRS_ICR_ERRC);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3864:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: style: Variable 'htim->Instance->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
      htim->Instance->CCER = tmpccer;
                           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5046:28: note: htim->Instance->CCER is assigned
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
                           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: note: htim->Instance->CCER is overwritten
      htim->Instance->CCER = tmpccer;
                           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: style: Variable 'TIMx->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
  TIMx->CCER = tmpccer;
             ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5195:14: note: TIMx->CCER is assigned
  TIMx->CCER &= ~TIM_CCER_CC1E;
             ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: note: TIMx->CCER is overwritten
  TIMx->CCER = tmpccer;
             ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3893:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5001:12: style: The scope of the variable 'tmpccmr1' can be reduced. [variableScope]
  uint32_t tmpccmr1 = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5002:12: style: The scope of the variable 'tmpccer' can be reduced. [variableScope]
  uint32_t tmpccer = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1615:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1742:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:693:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:777:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2113:12: style: The scope of the variable 'brrtemp' can be reduced. [variableScope]
  uint16_t brrtemp                    = 0x0000U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2114:12: style: The scope of the variable 'usartdiv' can be reduced. [variableScope]
  uint16_t usartdiv                   = 0x0000U;
           ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2671:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2737:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2739:13: style: The scope of the variable 'uhdata' can be reduced. [variableScope]
  uint16_t  uhdata;
            ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0;
                     ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:339:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:410:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:495:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:351:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:422:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:507:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:347:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:418:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:503:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: style: Variable 'huart->gState' is reassigned a value before the old one has been used. [redundantAssignment]
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:560:17: note: huart->gState is assigned
  huart->gState = HAL_UART_STATE_BUSY;
                ^
firmware/ibmpc_tester/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: note: huart->gState is overwritten
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/ibmpc_tester/Src/system_stm32f0xx.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/ibmpc_tester/Src/system_stm32f0xx.c:273:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSE_VALUE;
^
firmware/ibmpc_tester/Src/system_stm32f0xx.c:285:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSE_VALUE/predivfactor) * pllmull;
^
firmware/ibmpc_tester/Src/system_stm32f0xx.c:270:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/ibmpc_tester/Src/system_stm32f0xx.c:303:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
^
firmware/ibmpc_tester/Src/system_stm32f0xx.c:310:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/ibmpc_tester/scrap.c:16:1: error: syntax error: keyword 'if' is not allowed in global scope [syntaxError]
if(flash_size != 64)
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:878:0: information: Skipping configuration 'DMA2;HAL_DMA_MODULE_ENABLED' since the value of 'DMA2' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hdma->DmaBaseAddress = DMA2;
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: style: Variable 'hdma->Instance->CCR' is reassigned a value before the old one has been used. [redundantAssignment]
  hdma->Instance->CCR  = 0U;
                       ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:234:23: note: hdma->Instance->CCR is assigned
  hdma->Instance->CCR &= ~DMA_CCR_EN;
                      ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: note: hdma->Instance->CCR is overwritten
  hdma->Instance->CCR  = 0U;
                       ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:11: style: The scope of the variable 'index' can be reduced. [variableScope]
  uint8_t index = 0U;
          ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:11: style: The scope of the variable 'nbiterations' can be reduced. [variableScope]
  uint8_t nbiterations = 0U;
          ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:17: style: Variable 'index' is assigned a value that is never used. [unreadVariable]
  uint8_t index = 0U;
                ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:24: style: Variable 'nbiterations' is assigned a value that is never used. [unreadVariable]
  uint8_t nbiterations = 0U;
                       ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:303:23: style: Variable 'addresstmp' is assigned a value that is never used. [unreadVariable]
  uint32_t addresstmp = 0U;
                      ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:555:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (uint32_t)(~((~FLASH_OB_GetWRP()) | WriteProtectPage));
  ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:671:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (FLASH_OB_GetWRP() | WriteProtectPage);
  ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:12: style: The scope of the variable 'address' can be reduced. [variableScope]
  uint32_t address = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:20: style: Variable 'address' is assigned a value that is never used. [unreadVariable]
  uint32_t address = 0U;
                   ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:542:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:658:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:545:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:661:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:548:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:664:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:558:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:674:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:560:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:676:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:564:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:680:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:570:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:686:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:566:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:682:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:477:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = tmp;
              ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = tmp;
              ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = tmp;
              ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:190:17: style: Variable 'temp' is assigned a value that is never used. [unreadVariable]
  uint32_t temp = 0x00U;
                ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:315:16: style: Variable 'tmp' is assigned a value that is never used. [unreadVariable]
  uint32_t tmp = 0x00U;
               ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: style: Variable 'hi2c->Instance->OAR1' is reassigned a value before the old one has been used. [redundantAssignment]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:442:24: note: hi2c->Instance->OAR1 is assigned
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
                       ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: note: hi2c->Instance->OAR1 is overwritten
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: style: Variable 'hi2c->Instance->OAR2' is reassigned a value before the old one has been used. [redundantAssignment]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:465:24: note: hi2c->Instance->OAR2 is assigned
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
                       ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: note: hi2c->Instance->OAR2 is overwritten
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2890:12: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint32_t tmp;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:11: style: The scope of the variable 'transferdirection' can be reduced. [variableScope]
  uint8_t transferdirection = 0U;
          ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:12: style: The scope of the variable 'slaveaddrcode' can be reduced. [variableScope]
  uint16_t slaveaddrcode = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:12: style: The scope of the variable 'ownadd1code' can be reduced. [variableScope]
  uint16_t ownadd1code = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:12: style: The scope of the variable 'ownadd2code' can be reduced. [variableScope]
  uint16_t ownadd2code = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3266:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3500:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3501:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:29: style: Variable 'transferdirection' is assigned a value that is never used. [unreadVariable]
  uint8_t transferdirection = 0U;
                            ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:26: style: Variable 'slaveaddrcode' is assigned a value that is never used. [unreadVariable]
  uint16_t slaveaddrcode = 0U;
                         ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:24: style: Variable 'ownadd1code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd1code = 0U;
                       ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:24: style: Variable 'ownadd2code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd2code = 0U;
                       ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:12: style: The scope of the variable 'tmpreg' can be reduced. [variableScope]
  uint32_t tmpreg = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:19: style: Variable 'tmpreg' is assigned a value that is never used. [unreadVariable]
  uint32_t tmpreg = 0U;
                  ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:223:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 |= I2C_CR1_WUPEN;
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:262:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 &= ~(I2C_CR1_WUPEN);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:271:23: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
   uint32_t tickstart = 0U;
                      ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:727:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:122:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:123:21: style: Variable 'temp_reg' is assigned a value that is never used. [unreadVariable]
  uint32_t temp_reg = 0U;
                    ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:701:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRITE_REG(CRS->CFGR, value);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:705:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  MODIFY_REG(CRS->CR, CRS_CR_TRIM, (pInit->HSI48CalibrationValue << CRS_CR_TRIM_BITNUMBER));
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:710:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_AUTOTRIMEN | CRS_CR_CEN);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:719:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_SWSYNC);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:733:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->ReloadValue = (uint32_t)(READ_BIT(CRS->CFGR, CRS_CFGR_RELOAD));
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:736:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->HSI48CalibrationValue = (uint32_t)(READ_BIT(CRS->CR, CRS_CR_TRIM) >> CRS_CR_TRIM_BITNUMBER);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:739:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorCapture = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FECAP) >> CRS_ISR_FECAP_BITNUMBER);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:742:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorDirection = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FEDIR));
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:847:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itflags = READ_REG(CRS->ISR);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:848:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itsources = READ_REG(CRS->CR);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:854:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCOKC);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:863:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCWARNC);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:872:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_ESYNCC);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:896:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      WRITE_REG(CRS->ICR, CRS_ICR_ERRC);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:391:0: information: Skipping configuration 'HAL_SPI_MODULE_ENABLED;SPI_I2SCFGR_I2SMOD' since the value of 'SPI_I2SCFGR_I2SMOD' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3864:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: style: Variable 'htim->Instance->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
      htim->Instance->CCER = tmpccer;
                           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5046:28: note: htim->Instance->CCER is assigned
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
                           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: note: htim->Instance->CCER is overwritten
      htim->Instance->CCER = tmpccer;
                           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: style: Variable 'TIMx->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
  TIMx->CCER = tmpccer;
             ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5195:14: note: TIMx->CCER is assigned
  TIMx->CCER &= ~TIM_CCER_CC1E;
             ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: note: TIMx->CCER is overwritten
  TIMx->CCER = tmpccer;
             ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3893:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5001:12: style: The scope of the variable 'tmpccmr1' can be reduced. [variableScope]
  uint32_t tmpccmr1 = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5002:12: style: The scope of the variable 'tmpccer' can be reduced. [variableScope]
  uint32_t tmpccer = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1615:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1742:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:693:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:777:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2113:12: style: The scope of the variable 'brrtemp' can be reduced. [variableScope]
  uint16_t brrtemp                    = 0x0000U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2114:12: style: The scope of the variable 'usartdiv' can be reduced. [variableScope]
  uint16_t usartdiv                   = 0x0000U;
           ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2671:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2737:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2739:13: style: The scope of the variable 'uhdata' can be reduced. [variableScope]
  uint16_t  uhdata;
            ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0;
                     ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:339:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:410:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:495:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:351:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:422:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:507:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:347:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:418:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:503:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: style: Variable 'huart->gState' is reassigned a value before the old one has been used. [redundantAssignment]
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:560:17: note: huart->gState is assigned
  huart->gState = HAL_UART_STATE_BUSY;
                ^
firmware/quad_test/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: note: huart->gState is overwritten
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/quad_test/Src/system_stm32f0xx.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/quad_test/Src/system_stm32f0xx.c:273:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSE_VALUE;
^
firmware/quad_test/Src/system_stm32f0xx.c:285:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSE_VALUE/predivfactor) * pllmull;
^
firmware/quad_test/Src/system_stm32f0xx.c:270:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/quad_test/Src/system_stm32f0xx.c:303:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
^
firmware/quad_test/Src/system_stm32f0xx.c:310:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/quad_test/scrap.c:2:3: error: The code contains unhandled character(s) (character code=226). Neither unicode nor extended ascii is supported. [syntaxError]
y=−306.4516129032258x+20306.451612903224
  ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:878:0: information: Skipping configuration 'DMA2;HAL_DMA_MODULE_ENABLED' since the value of 'DMA2' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hdma->DmaBaseAddress = DMA2;
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: style: Variable 'hdma->Instance->CCR' is reassigned a value before the old one has been used. [redundantAssignment]
  hdma->Instance->CCR  = 0U;
                       ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:234:23: note: hdma->Instance->CCR is assigned
  hdma->Instance->CCR &= ~DMA_CCR_EN;
                      ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:237:24: note: hdma->Instance->CCR is overwritten
  hdma->Instance->CCR  = 0U;
                       ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:11: style: The scope of the variable 'index' can be reduced. [variableScope]
  uint8_t index = 0U;
          ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:11: style: The scope of the variable 'nbiterations' can be reduced. [variableScope]
  uint8_t nbiterations = 0U;
          ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:186:17: style: Variable 'index' is assigned a value that is never used. [unreadVariable]
  uint8_t index = 0U;
                ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:187:24: style: Variable 'nbiterations' is assigned a value that is never used. [unreadVariable]
  uint8_t nbiterations = 0U;
                       ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:303:23: style: Variable 'addresstmp' is assigned a value that is never used. [unreadVariable]
  uint32_t addresstmp = 0U;
                      ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:555:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (uint32_t)(~((~FLASH_OB_GetWRP()) | WriteProtectPage));
  ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:671:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  WriteProtectPage = (FLASH_OB_GetWRP() | WriteProtectPage);
  ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:12: style: The scope of the variable 'address' can be reduced. [variableScope]
  uint32_t address = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:178:20: style: Variable 'address' is assigned a value that is never used. [unreadVariable]
  uint32_t address = 0U;
                   ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:22: style: Variable 'WRP0_Data' is assigned a value that is never used. [unreadVariable]
  uint16_t WRP0_Data = 0xFFFFU;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:540:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:595:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: style: Condition 'WRP0_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if(WRP0_Data != 0xFFU)
                   ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:656:24: note: Assignment 'WRP0_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP0_Data = 0xFFFFU;
                       ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:711:20: note: Condition 'WRP0_Data!=0xFFU' is always true
      if(WRP0_Data != 0xFFU)
                   ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:542:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:605:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: style: Condition 'WRP1_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:658:24: note: Assignment 'WRP1_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP1_Data = 0xFFFFU;
                       ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:721:43: note: Condition 'WRP1_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP1_Data != 0xFFU))
                                          ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:545:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:615:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: style: Condition 'WRP2_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:661:24: note: Assignment 'WRP2_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP2_Data = 0xFFFFU;
                       ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:731:43: note: Condition 'WRP2_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP2_Data != 0xFFU))
                                          ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:548:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:625:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: style: Condition 'WRP3_Data!=0xFFU' is always true [knownConditionTrueFalse]
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:664:24: note: Assignment 'WRP3_Data=0xFFFFU', assigned value is 65535
  uint16_t WRP3_Data = 0xFFFFU;
                       ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:741:43: note: Condition 'WRP3_Data!=0xFFU' is always true
      if((status == HAL_OK) && (WRP3_Data != 0xFFU))
                                          ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:558:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:674:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO15MASK' since the value of 'OB_WRP_PAGES0TO15MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:560:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:676:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES0TO31MASK' since the value of 'OB_WRP_PAGES0TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:564:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:680:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES16TO31MASK' since the value of 'OB_WRP_PAGES16TO31MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:570:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:686:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO47MASK' since the value of 'OB_WRP_PAGES32TO47MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:566:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:682:0: information: Skipping configuration 'HAL_FLASH_MODULE_ENABLED;OB_WRP_PAGES32TO63MASK' since the value of 'OB_WRP_PAGES32TO63MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:477:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = tmp;
              ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: style: Variable 'GPIOx->LCKR' is reassigned a value before the old one has been used. [redundantAssignment]
  GPIOx->LCKR = tmp;
              ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:479:15: note: GPIOx->LCKR is assigned
  GPIOx->LCKR = GPIO_Pin;
              ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:481:15: note: GPIOx->LCKR is overwritten
  GPIOx->LCKR = tmp;
              ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:12: style: The scope of the variable 'iocurrent' can be reduced. [variableScope]
  uint32_t iocurrent = 0x00U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:189:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:190:17: style: Variable 'temp' is assigned a value that is never used. [unreadVariable]
  uint32_t temp = 0x00U;
                ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:314:22: style: Variable 'iocurrent' is assigned a value that is never used. [unreadVariable]
  uint32_t iocurrent = 0x00U;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:315:16: style: Variable 'tmp' is assigned a value that is never used. [unreadVariable]
  uint32_t tmp = 0x00U;
               ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: style: Variable 'hi2c->Instance->OAR1' is reassigned a value before the old one has been used. [redundantAssignment]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:442:24: note: hi2c->Instance->OAR1 is assigned
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
                       ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:447:26: note: hi2c->Instance->OAR1 is overwritten
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
                         ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: style: Variable 'hi2c->Instance->OAR2' is reassigned a value before the old one has been used. [redundantAssignment]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:465:24: note: hi2c->Instance->OAR2 is assigned
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
                       ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:468:24: note: hi2c->Instance->OAR2 is overwritten
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
                       ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:12: style: The scope of the variable 'xfermode' can be reduced. [variableScope]
  uint32_t xfermode = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2890:12: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint32_t tmp;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:11: style: The scope of the variable 'transferdirection' can be reduced. [variableScope]
  uint8_t transferdirection = 0U;
          ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:12: style: The scope of the variable 'slaveaddrcode' can be reduced. [variableScope]
  uint16_t slaveaddrcode = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:12: style: The scope of the variable 'ownadd1code' can be reduced. [variableScope]
  uint16_t ownadd1code = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:12: style: The scope of the variable 'ownadd2code' can be reduced. [variableScope]
  uint16_t ownadd2code = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:629:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:753:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:876:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1016:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1148:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1217:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1384:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1492:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1733:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1886:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2030:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2031:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2129:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2130:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2227:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2228:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2343:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2344:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2457:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2577:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2650:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3266:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3500:23: style: Variable 'devaddress' is assigned a value that is never used. [unreadVariable]
  uint16_t devaddress = 0U;
                      ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3501:21: style: Variable 'xfermode' is assigned a value that is never used. [unreadVariable]
  uint32_t xfermode = 0U;
                    ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3772:29: style: Variable 'transferdirection' is assigned a value that is never used. [unreadVariable]
  uint8_t transferdirection = 0U;
                            ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3773:26: style: Variable 'slaveaddrcode' is assigned a value that is never used. [unreadVariable]
  uint16_t slaveaddrcode = 0U;
                         ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3774:24: style: Variable 'ownadd1code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd1code = 0U;
                       ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3775:24: style: Variable 'ownadd2code' is assigned a value that is never used. [unreadVariable]
  uint16_t ownadd2code = 0U;
                       ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:12: style: The scope of the variable 'tmpreg' can be reduced. [variableScope]
  uint32_t tmpreg = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:157:19: style: Variable 'tmpreg' is assigned a value that is never used. [unreadVariable]
  uint32_t tmpreg = 0U;
                  ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:223:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 |= I2C_CR1_WUPEN;
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:262:0: information: Skipping configuration 'HAL_I2C_MODULE_ENABLED;I2C_CR1_WUPEN' since the value of 'I2C_CR1_WUPEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hi2c->Instance->CR1 &= ~(I2C_CR1_WUPEN);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:271:23: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
   uint32_t tickstart = 0U;
                      ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:727:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:122:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:123:21: style: Variable 'temp_reg' is assigned a value that is never used. [unreadVariable]
  uint32_t temp_reg = 0U;
                    ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:701:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  WRITE_REG(CRS->CFGR, value);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:705:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  MODIFY_REG(CRS->CR, CRS_CR_TRIM, (pInit->HSI48CalibrationValue << CRS_CR_TRIM_BITNUMBER));
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:710:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_AUTOTRIMEN | CRS_CR_CEN);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:719:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  SET_BIT(CRS->CR, CRS_CR_SWSYNC);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:733:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->ReloadValue = (uint32_t)(READ_BIT(CRS->CFGR, CRS_CFGR_RELOAD));
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:736:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->HSI48CalibrationValue = (uint32_t)(READ_BIT(CRS->CR, CRS_CR_TRIM) >> CRS_CR_TRIM_BITNUMBER);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:739:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorCapture = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FECAP) >> CRS_ISR_FECAP_BITNUMBER);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:742:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  pSynchroInfo->FreqErrorDirection = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FEDIR));
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:847:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itflags = READ_REG(CRS->ISR);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:848:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t itsources = READ_REG(CRS->CR);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:854:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCOKC);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:863:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_SYNCWARNC);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:872:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WRITE_REG(CRS->ICR, CRS_ICR_ESYNCC);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:896:0: information: Skipping configuration 'CRS;HAL_RCC_MODULE_ENABLED' since the value of 'CRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      WRITE_REG(CRS->ICR, CRS_ICR_ERRC);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:391:0: information: Skipping configuration 'HAL_SPI_MODULE_ENABLED;SPI_I2SCFGR_I2SMOD' since the value of 'SPI_I2SCFGR_I2SMOD' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3864:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3870:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: style: Variable 'htim->Instance->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
      htim->Instance->CCER = tmpccer;
                           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5046:28: note: htim->Instance->CCER is assigned
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
                           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5055:28: note: htim->Instance->CCER is overwritten
      htim->Instance->CCER = tmpccer;
                           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: style: Variable 'TIMx->CCER' is reassigned a value before the old one has been used. [redundantAssignment]
  TIMx->CCER = tmpccer;
             ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5195:14: note: TIMx->CCER is assigned
  TIMx->CCER &= ~TIM_CCER_CC1E;
             ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5208:14: note: TIMx->CCER is overwritten
  TIMx->CCER = tmpccer;
             ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3893:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5001:12: style: The scope of the variable 'tmpccmr1' can be reduced. [variableScope]
  uint32_t tmpccmr1 = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:5002:12: style: The scope of the variable 'tmpccer' can be reduced. [variableScope]
  uint32_t tmpccer = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: style: Variable 'htim->State' is reassigned a value before the old one has been used. [redundantAssignment]
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1615:15: note: htim->State is assigned
  htim->State = HAL_TIM_STATE_BUSY;
              ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1627:15: note: htim->State is overwritten
  htim->State = HAL_TIM_STATE_READY;
              ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1742:12: style: The scope of the variable 'tmpsmcr' can be reduced. [variableScope]
  uint32_t tmpsmcr = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:693:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:777:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:12: style: The scope of the variable 'tickstart' can be reduced. [variableScope]
  uint32_t tickstart = 0;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2113:12: style: The scope of the variable 'brrtemp' can be reduced. [variableScope]
  uint16_t brrtemp                    = 0x0000U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2114:12: style: The scope of the variable 'usartdiv' can be reduced. [variableScope]
  uint16_t usartdiv                   = 0x0000U;
           ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2671:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2737:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  uint16_t* tmp;
            ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2739:13: style: The scope of the variable 'uhdata' can be reduced. [variableScope]
  uint16_t  uhdata;
            ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:694:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0U;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:779:22: style: Variable 'tickstart' is assigned a value that is never used. [unreadVariable]
  uint32_t tickstart = 0;
                     ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:339:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:410:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:495:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR2_LINEN' since the value of 'USART_CR2_LINEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:351:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:422:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:507:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_IREN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:345:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:416:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:501:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_IREN;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:347:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:418:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:503:0: information: Skipping configuration 'HAL_UART_MODULE_ENABLED;USART_CR3_SCEN' since the value of 'USART_CR3_SCEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: style: Variable 'huart->gState' is reassigned a value before the old one has been used. [redundantAssignment]
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:560:17: note: huart->gState is assigned
  huart->gState = HAL_UART_STATE_BUSY;
                ^
firmware/sirius 1/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:565:17: note: huart->gState is overwritten
  huart->gState = HAL_UART_STATE_READY;
                ^
firmware/sirius 1/Src/system_stm32f0xx.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
firmware/sirius 1/Src/system_stm32f0xx.c:273:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSE_VALUE;
^
firmware/sirius 1/Src/system_stm32f0xx.c:285:0: information: Skipping configuration 'HSE_VALUE' since the value of 'HSE_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSE_VALUE/predivfactor) * pllmull;
^
firmware/sirius 1/Src/system_stm32f0xx.c:270:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/sirius 1/Src/system_stm32f0xx.c:303:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
^
firmware/sirius 1/Src/system_stm32f0xx.c:310:0: information: Skipping configuration 'HSI_VALUE' since the value of 'HSI_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SystemCoreClock = HSI_VALUE;
^
firmware/sirius 1/scrap.c:28:12: error: There is an unknown macro here somewhere. Configuration is required. If KB_WRITE_TIMEOUT is a macro then please configure it. [unknownMacro]
    return KB_WRITE_TIMEOUT
           ^
resources/ps2dev.cpp:260:13: style: Variable 'enabled' is assigned a value that is never used. [unreadVariable]
    enabled = 0;
            ^
resources/ps2dev.cpp:265:13: style: Variable 'enabled' is assigned a value that is never used. [unreadVariable]
    enabled = 1;
            ^
resources/ps2dev.cpp:71:0: information: Skipping configuration '_PS2DBG' since the value of '_PS2DBG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  _PS2DBG.print(F("sending "));
^
resources/ps2dev.cpp:72:0: information: Skipping configuration '_PS2DBG' since the value of '_PS2DBG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  _PS2DBG.println(data,HEX);
^
resources/ps2dev.cpp:132:0: information: Skipping configuration '_PS2DBG' since the value of '_PS2DBG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  _PS2DBG.print(F("sent "));
^
resources/ps2dev.cpp:133:0: information: Skipping configuration '_PS2DBG' since the value of '_PS2DBG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  _PS2DBG.println(data,HEX);
^
resources/ps2dev.cpp:211:0: information: Skipping configuration '_PS2DBG' since the value of '_PS2DBG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  _PS2DBG.print(F("received data "));
^
resources/ps2dev.cpp:212:0: information: Skipping configuration '_PS2DBG' since the value of '_PS2DBG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  _PS2DBG.println(*value,HEX);
^
resources/ps2dev.cpp:213:0: information: Skipping configuration '_PS2DBG' since the value of '_PS2DBG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  _PS2DBG.print(F("received parity "));
^
resources/ps2dev.cpp:214:0: information: Skipping configuration '_PS2DBG' since the value of '_PS2DBG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  _PS2DBG.print(received_parity,BIN);
^
resources/ps2dev.cpp:215:0: information: Skipping configuration '_PS2DBG' since the value of '_PS2DBG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  _PS2DBG.print(F(" calculated parity "));
^
resources/ps2dev.cpp:216:0: information: Skipping configuration '_PS2DBG' since the value of '_PS2DBG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  _PS2DBG.println(received_parity,BIN);
^
resources/ps2dev.cpp:289:0: information: Skipping configuration '_PS2DBG' since the value of '_PS2DBG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    _PS2DBG.print("LEDs: ");
^
resources/ps2dev.cpp:290:0: information: Skipping configuration '_PS2DBG' since the value of '_PS2DBG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    _PS2DBG.println(*leds, HEX);
^
firmware/adb/Src/stm32f0xx_it.c:138:0: style: The function 'EXTI0_1_IRQHandler' is never used. [unusedFunction]

^
firmware/bbc_micro/Src/stm32f0xx_it.c:131:0: style: The function 'EXTI2_3_IRQHandler' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc_ex.c:113:0: style: The function 'HAL_ADCEx_Calibration_Start' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:1744:0: style: The function 'HAL_ADC_AnalogWDGConfig' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:585:0: style: The function 'HAL_ADC_DeInit' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:1880:0: style: The function 'HAL_ADC_GetError' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:1866:0: style: The function 'HAL_ADC_GetState' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:1395:0: style: The function 'HAL_ADC_IRQHandler' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:997:0: style: The function 'HAL_ADC_PollForEvent' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:1207:0: style: The function 'HAL_ADC_Start_DMA' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:1073:0: style: The function 'HAL_ADC_Start_IT' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:1296:0: style: The function 'HAL_ADC_Stop_DMA' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c:1154:0: style: The function 'HAL_ADC_Stop_IT' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac_ex.c:899:0: style: The function 'HAL_DACEx_DualGetValue' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac_ex.c:1049:0: style: The function 'HAL_DACEx_DualSetValue' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac_ex.c:985:0: style: The function 'HAL_DACEx_NoiseWaveGenerate' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac_ex.c:937:0: style: The function 'HAL_DACEx_TriangleWaveGenerate' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c:300:0: style: The function 'HAL_DAC_DeInit' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c:757:0: style: The function 'HAL_DAC_GetError' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c:744:0: style: The function 'HAL_DAC_GetState' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c:680:0: style: The function 'HAL_DAC_GetValue' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c:536:0: style: The function 'HAL_DAC_IRQHandler' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c:449:0: style: The function 'HAL_DAC_Start_DMA' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c:417:0: style: The function 'HAL_DAC_Stop' is never used. [unusedFunction]

^
firmware/bbc_micro/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c:475:0: style: The function 'HAL_DAC_Stop_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c:445:0: style: The function 'HAL_DBGMCU_DisableDBGStandbyMode' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c:427:0: style: The function 'HAL_DBGMCU_DisableDBGStopMode' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c:436:0: style: The function 'HAL_DBGMCU_EnableDBGStandbyMode' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c:418:0: style: The function 'HAL_DBGMCU_EnableDBGStopMode' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:222:0: style: The function 'HAL_DMA_DeInit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:804:0: style: The function 'HAL_DMA_GetError' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:793:0: style: The function 'HAL_DMA_GetState' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:574:0: style: The function 'HAL_DMA_IRQHandler' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:154:0: style: The function 'HAL_DMA_Init' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:473:0: style: The function 'HAL_DMA_PollForTransfer' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:666:0: style: The function 'HAL_DMA_RegisterCallback' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:298:0: style: The function 'HAL_DMA_Start' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c:717:0: style: The function 'HAL_DMA_UnRegisterCallback' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c:179:0: style: The function 'HAL_DeInit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:175:0: style: The function 'HAL_FLASHEx_Erase' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:256:0: style: The function 'HAL_FLASHEx_Erase_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:459:0: style: The function 'HAL_FLASHEx_OBGetConfig' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:481:0: style: The function 'HAL_FLASHEx_OBGetUserData' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c:378:0: style: The function 'HAL_FLASHEx_OBProgram' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:592:0: style: The function 'HAL_FLASH_GetError' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:301:0: style: The function 'HAL_FLASH_IRQHandler' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:515:0: style: The function 'HAL_FLASH_Lock' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:560:0: style: The function 'HAL_FLASH_OB_Launch' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:547:0: style: The function 'HAL_FLASH_OB_Lock' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:527:0: style: The function 'HAL_FLASH_OB_Unlock' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:183:0: style: The function 'HAL_FLASH_Program' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:255:0: style: The function 'HAL_FLASH_Program_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c:495:0: style: The function 'HAL_FLASH_Unlock' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c:466:0: style: The function 'HAL_GPIO_LockPin' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c:382:0: style: The function 'HAL_GetDEVID' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c:364:0: style: The function 'HAL_GetHalVersion' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c:373:0: style: The function 'HAL_GetREVID' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c:391:0: style: The function 'HAL_GetUIDw0' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c:400:0: style: The function 'HAL_GetUIDw1' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c:409:0: style: The function 'HAL_GetUIDw2' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2029:0: style: The function 'HAL_HalfDuplex_EnableReceiver' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2005:0: style: The function 'HAL_HalfDuplex_EnableTransmitter' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:318:0: style: The function 'HAL_I2CEx_DisableFastModePlus' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c:293:0: style: The function 'HAL_I2CEx_EnableFastModePlus' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:491:0: style: The function 'HAL_I2C_DeInit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2887:0: style: The function 'HAL_I2C_DisableListen_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2989:0: style: The function 'HAL_I2C_ER_IRQHandler' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2970:0: style: The function 'HAL_I2C_EV_IRQHandler' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2863:0: style: The function 'HAL_I2C_EnableListen_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3239:0: style: The function 'HAL_I2C_GetError' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3228:0: style: The function 'HAL_I2C_GetMode' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:3216:0: style: The function 'HAL_I2C_GetState' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2920:0: style: The function 'HAL_I2C_Master_Abort_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:751:0: style: The function 'HAL_I2C_Master_Receive' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1490:0: style: The function 'HAL_I2C_Master_Receive_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1215:0: style: The function 'HAL_I2C_Master_Receive_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2648:0: style: The function 'HAL_I2C_Master_Sequential_Receive_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2575:0: style: The function 'HAL_I2C_Master_Sequential_Transmit_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:627:0: style: The function 'HAL_I2C_Master_Transmit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1382:0: style: The function 'HAL_I2C_Master_Transmit_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1146:0: style: The function 'HAL_I2C_Master_Transmit_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1884:0: style: The function 'HAL_I2C_Mem_Read' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2341:0: style: The function 'HAL_I2C_Mem_Read_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2127:0: style: The function 'HAL_I2C_Mem_Read_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2225:0: style: The function 'HAL_I2C_Mem_Write_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2028:0: style: The function 'HAL_I2C_Mem_Write_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1014:0: style: The function 'HAL_I2C_Slave_Receive' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1661:0: style: The function 'HAL_I2C_Slave_Receive_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1331:0: style: The function 'HAL_I2C_Slave_Receive_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2793:0: style: The function 'HAL_I2C_Slave_Sequential_Receive_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:2719:0: style: The function 'HAL_I2C_Slave_Sequential_Transmit_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:874:0: style: The function 'HAL_I2C_Slave_Transmit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1595:0: style: The function 'HAL_I2C_Slave_Transmit_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c:1282:0: style: The function 'HAL_I2C_Slave_Transmit_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:257:0: style: The function 'HAL_LIN_Init' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:552:0: style: The function 'HAL_LIN_SendBreak' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:519:0: style: The function 'HAL_MultiProcessorEx_AddressLength_Set' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:1974:0: style: The function 'HAL_MultiProcessor_DisableMuteMode' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:1953:0: style: The function 'HAL_MultiProcessor_EnableMuteMode' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:1995:0: style: The function 'HAL_MultiProcessor_EnterMuteMode' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:455:0: style: The function 'HAL_MultiProcessor_Init' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_cortex.c:289:0: style: The function 'HAL_NVIC_ClearPendingIRQ' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_cortex.c:273:0: style: The function 'HAL_NVIC_GetPendingIRQ' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_cortex.c:242:0: style: The function 'HAL_NVIC_GetPriority' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_cortex.c:255:0: style: The function 'HAL_NVIC_SetPendingIRQ' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_cortex.c:197:0: style: The function 'HAL_NVIC_SystemReset' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c:233:0: style: The function 'HAL_PWREx_DisableVddio2Monitor' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c:223:0: style: The function 'HAL_PWREx_EnableVddio2Monitor' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c:245:0: style: The function 'HAL_PWREx_Vddio2Monitor_IRQHandler' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c:124:0: style: The function 'HAL_PWR_ConfigPVD' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr.c:91:0: style: The function 'HAL_PWR_DeInit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr.c:116:0: style: The function 'HAL_PWR_DisableBkUpAccess' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c:175:0: style: The function 'HAL_PWR_DisablePVD' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr.c:447:0: style: The function 'HAL_PWR_DisableSEVOnPend' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr.c:420:0: style: The function 'HAL_PWR_DisableSleepOnExit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr.c:262:0: style: The function 'HAL_PWR_DisableWakeUpPin' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr.c:104:0: style: The function 'HAL_PWR_EnableBkUpAccess' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c:166:0: style: The function 'HAL_PWR_EnablePVD' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr.c:434:0: style: The function 'HAL_PWR_EnableSEVOnPend' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr.c:407:0: style: The function 'HAL_PWR_EnableSleepOnExit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr.c:247:0: style: The function 'HAL_PWR_EnableWakeUpPin' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr.c:285:0: style: The function 'HAL_PWR_EnterSLEEPMode' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr.c:383:0: style: The function 'HAL_PWR_EnterSTANDBYMode' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr.c:328:0: style: The function 'HAL_PWR_EnterSTOPMode' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c:185:0: style: The function 'HAL_PWR_PVD_IRQHandler' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:286:0: style: The function 'HAL_RCCEx_GetPeriphCLKConfig' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c:386:0: style: The function 'HAL_RCCEx_GetPeriphCLKFreq' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:225:0: style: The function 'HAL_RCC_DeInit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:1028:0: style: The function 'HAL_RCC_DisableCSS' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:1019:0: style: The function 'HAL_RCC_EnableCSS' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:1265:0: style: The function 'HAL_RCC_GetClockConfig' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:1163:0: style: The function 'HAL_RCC_GetOscConfig' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:985:0: style: The function 'HAL_RCC_MCOConfig' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c:1291:0: style: The function 'HAL_RCC_NMI_IRQHandler' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:182:0: style: The function 'HAL_RS485Ex_Init' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c:354:0: style: The function 'HAL_ResumeTick' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi_ex.c:96:0: style: The function 'HAL_SPIEx_FlushRxFifo' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:1990:0: style: The function 'HAL_SPI_Abort' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:2144:0: style: The function 'HAL_SPI_Abort_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:2334:0: style: The function 'HAL_SPI_DMAPause' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:2354:0: style: The function 'HAL_SPI_DMAResume' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:2374:0: style: The function 'HAL_SPI_DMAStop' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:406:0: style: The function 'HAL_SPI_DeInit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:2662:0: style: The function 'HAL_SPI_GetError' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:2650:0: style: The function 'HAL_SPI_GetState' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:698:0: style: The function 'HAL_SPI_Receive' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:1665:0: style: The function 'HAL_SPI_Receive_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:1324:0: style: The function 'HAL_SPI_Receive_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:512:0: style: The function 'HAL_SPI_Transmit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:1551:0: style: The function 'HAL_SPI_Transmit_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c:1234:0: style: The function 'HAL_SPI_Transmit_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c:337:0: style: The function 'HAL_SuspendTick' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1642:0: style: The function 'HAL_TIMEx_ConfigBreakDeadTime' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1460:0: style: The function 'HAL_TIMEx_ConfigCommutationEvent' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1562:0: style: The function 'HAL_TIMEx_ConfigCommutationEvent_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1509:0: style: The function 'HAL_TIMEx_ConfigCommutationEvent_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:237:0: style: The function 'HAL_TIMEx_HallSensor_DeInit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1957:0: style: The function 'HAL_TIMEx_HallSensor_GetState' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:158:0: style: The function 'HAL_TIMEx_HallSensor_Init' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:294:0: style: The function 'HAL_TIMEx_HallSensor_Start' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:386:0: style: The function 'HAL_TIMEx_HallSensor_Start_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:336:0: style: The function 'HAL_TIMEx_HallSensor_Start_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:315:0: style: The function 'HAL_TIMEx_HallSensor_Stop' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:433:0: style: The function 'HAL_TIMEx_HallSensor_Stop_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:360:0: style: The function 'HAL_TIMEx_HallSensor_Stop_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:489:0: style: The function 'HAL_TIMEx_OCN_Start' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:691:0: style: The function 'HAL_TIMEx_OCN_Start_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:549:0: style: The function 'HAL_TIMEx_OCN_Start_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:519:0: style: The function 'HAL_TIMEx_OCN_Stop' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:806:0: style: The function 'HAL_TIMEx_OCN_Stop_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:616:0: style: The function 'HAL_TIMEx_OCN_Stop_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1309:0: style: The function 'HAL_TIMEx_OnePulseN_Start' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1363:0: style: The function 'HAL_TIMEx_OnePulseN_Start_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1334:0: style: The function 'HAL_TIMEx_OnePulseN_Stop' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1394:0: style: The function 'HAL_TIMEx_OnePulseN_Stop_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:906:0: style: The function 'HAL_TIMEx_PWMN_Start' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1107:0: style: The function 'HAL_TIMEx_PWMN_Start_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:965:0: style: The function 'HAL_TIMEx_PWMN_Start_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:935:0: style: The function 'HAL_TIMEx_PWMN_Stop' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1222:0: style: The function 'HAL_TIMEx_PWMN_Stop_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1032:0: style: The function 'HAL_TIMEx_PWMN_Stop_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c:1696:0: style: The function 'HAL_TIMEx_RemapConfig' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:243:0: style: The function 'HAL_TIM_Base_DeInit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:4493:0: style: The function 'HAL_TIM_Base_GetState' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:388:0: style: The function 'HAL_TIM_Base_Start_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:324:0: style: The function 'HAL_TIM_Base_Stop' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:432:0: style: The function 'HAL_TIM_Base_Stop_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:367:0: style: The function 'HAL_TIM_Base_Stop_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3891:0: style: The function 'HAL_TIM_ConfigOCrefClear' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:4193:0: style: The function 'HAL_TIM_ConfigTI1Input' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3603:0: style: The function 'HAL_TIM_DMABurst_ReadStart' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3782:0: style: The function 'HAL_TIM_DMABurst_ReadStop' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3333:0: style: The function 'HAL_TIM_DMABurst_WriteStart' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3511:0: style: The function 'HAL_TIM_DMABurst_WriteStop' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:2340:0: style: The function 'HAL_TIM_Encoder_DeInit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:4543:0: style: The function 'HAL_TIM_Encoder_GetState' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:2247:0: style: The function 'HAL_TIM_Encoder_Init' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:2402:0: style: The function 'HAL_TIM_Encoder_Start' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:2590:0: style: The function 'HAL_TIM_Encoder_Start_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:2488:0: style: The function 'HAL_TIM_Encoder_Start_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:2444:0: style: The function 'HAL_TIM_Encoder_Stop' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:2707:0: style: The function 'HAL_TIM_Encoder_Stop_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:2536:0: style: The function 'HAL_TIM_Encoder_Stop_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3854:0: style: The function 'HAL_TIM_GenerateEvent' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3001:0: style: The function 'HAL_TIM_IC_ConfigChannel' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:1538:0: style: The function 'HAL_TIM_IC_DeInit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:4523:0: style: The function 'HAL_TIM_IC_GetState' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:1498:0: style: The function 'HAL_TIM_IC_Init' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:1601:0: style: The function 'HAL_TIM_IC_Start' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:1774:0: style: The function 'HAL_TIM_IC_Start_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:1653:0: style: The function 'HAL_TIM_IC_Start_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:1627:0: style: The function 'HAL_TIM_IC_Stop' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:1887:0: style: The function 'HAL_TIM_IC_Stop_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:1712:0: style: The function 'HAL_TIM_IC_Stop_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:2932:0: style: The function 'HAL_TIM_OC_ConfigChannel' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:521:0: style: The function 'HAL_TIM_OC_DeInit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:4503:0: style: The function 'HAL_TIM_OC_GetState' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:481:0: style: The function 'HAL_TIM_OC_Init' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:584:0: style: The function 'HAL_TIM_OC_Start' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:782:0: style: The function 'HAL_TIM_OC_Start_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:648:0: style: The function 'HAL_TIM_OC_Start_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:616:0: style: The function 'HAL_TIM_OC_Stop' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:899:0: style: The function 'HAL_TIM_OC_Stop_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:714:0: style: The function 'HAL_TIM_OC_Stop_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3197:0: style: The function 'HAL_TIM_OnePulse_ConfigChannel' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:2021:0: style: The function 'HAL_TIM_OnePulse_DeInit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:4533:0: style: The function 'HAL_TIM_OnePulse_GetState' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:1974:0: style: The function 'HAL_TIM_OnePulse_Init' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:2082:0: style: The function 'HAL_TIM_OnePulse_Start' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:2148:0: style: The function 'HAL_TIM_OnePulse_Start_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:2115:0: style: The function 'HAL_TIM_OnePulse_Stop' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:2187:0: style: The function 'HAL_TIM_OnePulse_Stop_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:3097:0: style: The function 'HAL_TIM_PWM_ConfigChannel' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:1028:0: style: The function 'HAL_TIM_PWM_DeInit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:4513:0: style: The function 'HAL_TIM_PWM_GetState' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:988:0: style: The function 'HAL_TIM_PWM_Init' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:1091:0: style: The function 'HAL_TIM_PWM_Start' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:1292:0: style: The function 'HAL_TIM_PWM_Start_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:1158:0: style: The function 'HAL_TIM_PWM_Start_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:1123:0: style: The function 'HAL_TIM_PWM_Stop' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:1409:0: style: The function 'HAL_TIM_PWM_Stop_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:1224:0: style: The function 'HAL_TIM_PWM_Stop_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:4298:0: style: The function 'HAL_TIM_ReadCapturedValue' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:4225:0: style: The function 'HAL_TIM_SlaveConfigSynchronization' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c:4260:0: style: The function 'HAL_TIM_SlaveConfigSynchronization_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:484:0: style: The function 'HAL_UARTEx_DisableStopMode' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:458:0: style: The function 'HAL_UARTEx_EnableStopMode' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c:402:0: style: The function 'HAL_UARTEx_StopModeWakeUpSourceConfig' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:1246:0: style: The function 'HAL_UART_Abort' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:1355:0: style: The function 'HAL_UART_AbortReceive' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:1593:0: style: The function 'HAL_UART_AbortReceive_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:1313:0: style: The function 'HAL_UART_AbortTransmit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:1528:0: style: The function 'HAL_UART_AbortTransmit_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:1403:0: style: The function 'HAL_UART_Abort_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:1125:0: style: The function 'HAL_UART_DMAPause' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:1158:0: style: The function 'HAL_UART_DMAResume' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:1192:0: style: The function 'HAL_UART_DMAStop' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:535:0: style: The function 'HAL_UART_DeInit' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2088:0: style: The function 'HAL_UART_GetError' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:2073:0: style: The function 'HAL_UART_GetState' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:775:0: style: The function 'HAL_UART_Receive' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:1054:0: style: The function 'HAL_UART_Receive_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:917:0: style: The function 'HAL_UART_Receive_IT' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c:979:0: style: The function 'HAL_UART_Transmit_DMA' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Src/stm32f0xx_it.c:65:0: style: The function 'HardFault_Handler' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Src/stm32f0xx_it.c:52:0: style: The function 'NMI_Handler' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Src/stm32f0xx_it.c:96:0: style: The function 'PendSV_Handler' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Src/stm32f0xx_it.c:131:0: style: The function 'SPI1_IRQHandler' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Src/stm32f0xx_it.c:83:0: style: The function 'SVC_Handler' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Src/stm32f0xx_it.c:109:0: style: The function 'SysTick_Handler' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Src/system_stm32f0xx.c:260:0: style: The function 'SystemCoreClockUpdate' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Src/system_stm32f0xx.c:163:0: style: The function 'SystemInit' is never used. [unusedFunction]

^
firmware/apple_lisa_mac_adb/Src/stm32f0xx_it.c:142:0: style: The function 'TIM14_IRQHandler' is never used. [unusedFunction]

^
firmware/apple_lisa_mac_adb/Src/stm32f0xx_it.c:156:0: style: The function 'TIM16_IRQHandler' is never used. [unusedFunction]

^
firmware/apple_lisa_mac_adb/Src/stm32f0xx_it.c:170:0: style: The function 'TIM17_IRQHandler' is never used. [unusedFunction]

^
firmware/ibmpc/Src/stm32f0xx_it.c:160:0: style: The function 'USART3_4_IRQHandler' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Src/main.c:720:0: style: The function 'assert_failed' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Src/main.c:92:0: style: The function 'fputc' is never used. [unusedFunction]

^
firmware/ibmpc/Src/ps2mouse.c:75:0: style: The function 'ps2mouse_send_bat' is never used. [unusedFunction]

^
firmware/TRS80_model_II/Src/main.c:387:0: style: The function 'sirius1_send_key' is never used. [unusedFunction]

^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingInclude]

